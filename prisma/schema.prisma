generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Book {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  name      String
  rating    Int
  review    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  ShelfItem ShelfItem[]

  @@map("books")
}

model Shelf {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  items     ShelfItem[]
  userId    String     @db.ObjectId
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("shelves")
}

model ShelfItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  bookId   String @db.ObjectId
  book     Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)
  quantity Int
  shelfId  String @db.ObjectId
  shelf    Shelf  @relation(fields: [shelfId], references: [id], onDelete: Cascade)

  @@map("shelfitems")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Shelf         Shelf[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
